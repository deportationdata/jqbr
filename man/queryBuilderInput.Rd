% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/queryBuilder.R
\name{queryBuilderInput}
\alias{queryBuilderInput}
\title{queryBuilderInput}
\usage{
queryBuilderInput(
  inputId,
  width = "100\%",
  filters,
  plugins = NULL,
  rules = NULL,
  optgroups = NULL,
  default_filter = NULL,
  sort_filters = FALSE,
  allow_groups = TRUE,
  allow_empty = FALSE,
  display_errors = FALSE,
  conditions = c("AND", "OR"),
  default_condition = "AND",
  inputs_separator = ",",
  display_empty_filter = TRUE,
  select_placeholder = "------",
  operators = NULL,
  return_value = c("r_rules", "rules", "sql", "all"),
  output_options = NULL
)
}
\arguments{
\item{filters}{list of list specifying the available filters in the builder.
See example for a See https://querybuilder.js.org/#filters
for details on the possible options}

\item{plugins}{list of optional plugins.}

\item{rules}{Initial set of rules.
By default the builder will contain one empty rule}

\item{optgroups}{List of groups in the filters and operators dropdowns.}

\item{default_filter}{string. The \code{id} of the default filter for any new rule.}

\item{sort_filters}{boolean|function. Sort filters alphabetically, or with a custom JS function.}

\item{allow_groups}{boolean|int. Number of allowed nested groups.
\code{TRUE} for no limit.}

\item{allow_empty}{bool. If \code{TRUE}, no error will be thrown if the builder is entirely empty.}

\item{display_errors}{bool. If \code{TRUE}, when an error occurs on a rule, display an icon with a tooltip
explaining the error.}

\item{conditions}{string. Array of available group conditions. Use the
\code{lang} option to change the label.}

\item{select_placeholder}{string. Label of the "no filter" option.}

\item{lang}{Additional/overwrites translation strings.}
}
\description{
Shiny input for queryBuilder.
}
\examples{
library(shiny)
library(qbr)

ui <- fluidPage(
  queryBuilderInput("qb")
)

server <- function(input, output) {
  observeEvent(input$qb, {
    print(input$qb)
  })
}

if (interactive()) {
  shinyApp(ui, server)
}
}
